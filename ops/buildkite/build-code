#!/bin/bash
#
#  build-code
#
#  Build grapher code.
#

set -o errexit
set -o pipefail
set -o nounset

############ WARNING ##############
# TODO before migrating to ourworldindata.org
# 1. Change `BAKED_BASE_URL` in this script and in `deploy-content`

# URL of Cloudflare page
# branches would be deployed to https://[branch].$PROJECT_NAME.pages.dev/"
# BAKED_BASE_URL="https://$PROJECT_NAME.pages.dev"
# BAKED_BASE_URL="https://pages.owid.io"
BAKED_BASE_URL="https://ourworldindata.org"

build_code () {
    echo "--- Build code from branch master"

    if [[ "$BRANCH" != "master" ]]; then
        echo "Error: You're not on the master branch. Exiting."
        exit 1
    fi

    update_env
    update_owid_grapher_repo
    build_grapher

    echo "--- Code built"
}


update_env() {
    echo '--- Copying owid-admin-prod:owid-grapher/.env to owid-grapher/.env and updating it'

    # copy .env from admin server
    rsync -av --rsh 'ssh -o StrictHostKeyChecking=no' owid@owid-admin-prod:owid-grapher/.env owid-grapher/.env.template

    # copy .env.template to .env
    cp owid-grapher/.env.template owid-grapher/.env

    # change specific variables
    # NOTE: `BAKED_SITE_DIR` does not actually change
    sed -i "s|^BAKED_SITE_DIR=.*$|BAKED_SITE_DIR=/home/owid/live-data/bakedSite|" owid-grapher/.env
    # NOTE: this should be identical once we merge to master
    sed -i "s|^BAKED_BASE_URL=.*$|BAKED_BASE_URL=$BAKED_BASE_URL|" owid-grapher/.env
    # correct BAKED_SITE_DIR
    if ! grep -q "^BAKED_SITE_DIR=" owid-grapher/.env; then
        echo "BAKED_SITE_DIR=/home/owid/live-data/bakedSite" >> owid-grapher/.env
    else
        sed -i "s|^BAKED_SITE_DIR=.*$|BAKED_SITE_DIR=/home/owid/live-data/bakedSite|" owid-grapher/.env
    fi
}


update_owid_grapher_repo() {
    echo '--- Updating owid-grapher'
    (
        cd owid-grapher
        git fetch --all -q
        git checkout "$BRANCH" -q
        git reset --hard origin/"$BRANCH"
    )
}

build_grapher() {
    echo '--- Building owid-grapher'

    # NOTE: buildViteSite creates dist/assets folder and `bakeAssets` then copies it to
    # the bakedSite folder
    (
        cd owid-grapher
        corepack install
        yarn install
        git rev-parse HEAD > /home/owid/live-data/bakedSite/head.txt
        yarn buildLerna --skip-nx-cache
        yarn buildViteSite
        yarn runDbMigrations
        yarn tsx --tsconfig tsconfig.tsx.json --unhandled-rejections=strict baker/algolia/configureAlgolia.ts
    )
}

build_code
